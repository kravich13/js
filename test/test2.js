
var numbers = [1, 20, 30, 4, 5, 6, 70, 80, 50, 10]  // объявляем первый массив со значениями;
var newdata = [];   // объявляем второй массив со значением undefined (пусто);
for (var i = 0; i < numbers.length; i++) {  // с помощью переменной i делаем цикл на всю длинну массива;

    if (numbers[i] % 2 == 0) {  // в if делаем проверку на четные числа, если true, то.. Eсли нет - else;
        newdata[i] = numbers[i] / 2;    // во второй массив записываем деление четных чисел первого массива на 2;
    }
    else {  // если иф оказался ложным, то выполняется else ;
        newdata[i] = numbers[i] * 2;    // во второй массив записываем умножение нечетных чисел первого массива на 2;
    }
}
console.log(numbers);   // выводим в консоль первый массив (неизмененный);
console.log(newdata);   // выводим в консоль второй массив (измененный);


// фукнция которая выполняет массив и вывод лог хай + всех элементов массива



//
var names = ["Вася", "Петя", "БритниСпирс"];   // объявляем первый массив
function sayHi (massiv) {   // объявляем функцию (название - sayHi) и передаем параметры (massiv)
    var newMassiv = [];     // объявляем пустой массив в функции для перезаписи

    for (var i = 0; i < names.length; i++) {   // делаем цикл первого массива
        newMassiv[i] = "hi " + massiv[i];   // в новый массив записываем "hi" и добавляем первый массив
    }
    return newMassiv;   // возвращаем новый массив  
}
console.log(sayHi(["Вася", "Петя", "БритниСпирс"]));  // вызвал функцию с массивом



// вычисление самого большого числа из массива
    var numbers = [25, 37, 45, 1, 39, 81, 31, 50];  // объявляем массив

    function maxNumb(max) {     // объявляем функцию с именем "maxNumb" и свойством (max)
        var newMax = -Infinity;  // создали новую переменную, у которой значение минус бесконечность (число)

        for (i = 0; i < numbers.length; i++) {  // делаем цикл массива "numbers"
            if (numbers[i] > newMax) {  // делаем иф с проверкой больше ли число, чем -инфинити
                newMax = numbers[i];    // присваиваем большее число в переменную newMax
            }
        }
        return newMax;  // возвращаем новую переменную
    }
    console.log(maxNumb(numbers)); // выводим в консоль лог функцию со свойством (numbers)


    var arr = ["a", "b", "c", "d"];     // объявляем массив с 4 индексами
    var lastIndex = arr.length - 1; // создаем переменную и вписываем в неё "массив.ленс -1, чтобы отнять у индекса 1 елемент
    var lastElement = arr[lastIndex] // создаем переменную для записи в неё массива с измененным ласт индексом (-1)
    console.log("posledniyElement " + lastElement + ", posledniyIndex " + lastIndex);
    // выводим в консоль строку + последний элемент + строка + последний индекс



    // Создайте массив styles с элементами «Джаз» и «Блюз».
    // Добавьте «Рок-н-ролл» в конец.
    // Замените значение в середине на «Классика». Ваш код для поиска значения в середине должен работать для массивов с любой длиной.
    // Удалите первый элемент массива и покажите его.
    // Вставьте «Рэп» и «Регги» в начало массива.

    var styles = ["Джаз", "Блюз"];
    console.log(styles);
    styles [styles.length] = "Рок-н-ролл";
    console.log(styles);
    styles[1] = "Классика";
    styles.length / 2
    console.log(styles);
    alert ( styles.shift() );
    console.log(styles);
    styles.unshift ("Рэп", "Регги");
    console.log(styles);


    // ВЫВОДИТ СРЕДНИЙ ЭЛЕМЕНТ НЕЧЕТНОГО МАССИВА И ИЗМЕНЯЕТ ЕГО В ФУНКЦИИ 
    var arr = ["a", "b", "какая-то хрень", "c", "d"]    // объявляем массив
    console.log(arr)    // выводим в консоль НЕизменный массив

    function changeMiddle(arr, content) {   // объявляем функцию с именем changeMiddle с объявленными из вне переменными (arr и content)
        var index = arr.length - 1; // объявляем паременную, в которую присваиваем длинну последнего элемента и отбавляем единицу для понятия его индекса
        index = index / 2;  // в переменную index записываем index делим на два (количесто элементов : 2)
        arr[index] = content;   // в массив с центральным элементым присваиваем переменную content (которая из вне)
        return arr[index];   // "может вернуть какое-то значение в результате выполнения функции"
    }
    console.log(changeMiddle(arr, 30))  // выводим в консоль массив с заданным параметром (середина массива) 30
    console.log(arr)    // выводим в консоль измененный массив





    // ФУНКЦИЯ НА ПРОВЕРКУ МАССИВОВ И ВЫВОДА ЦЕНТРАЛЬНЫХ ЧЕТНЫХ И НЕЧЕТНЫХ ЭЛЕМЕНТОВ

    var arrs = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  // объявляем четный массив
    var ar = ["кокосита", "владик", "что-то", "english"]    // объявляем ещё один четный массив
    var a = "[1, 2, 3]" // объявляем нечетный массив

    console.log(changeMiddle(arrs, "середина")) // вызываем функцию с массивом arrs и вбиваем значение "середина"
    console.log(changeMiddle(ar, 1))    // вызываем функцию с массивом ar и вбиваем значение 1
    console.log(changeMiddle(a, "ф"))   // ты понял

    function changeMiddle(arr, content) {   // объявляем функцию с именем changeMiddle и двумя параметрами (ИЗВНЕ: arr, content). arr - наш массив, content - средние элементы

        if (Array.isArray(arr) == false) {  // объявляем if с проверкой на массив == false. Эта проверка вылавливает все немассивы и выводит их ошибкой
            console.log("Это не массив")    // на немассиве высветится "не массив"
            return null;    // высветится значение "null"
        }
        
        if (arr.length % 2 == 0) {  // объвляем if с проверной на чётность
            var index = arr.length; // объявляем переменную, в которую присваиваем (=) длинну массива
            index = (index / 2) - 1; // в переменную присваиваем длинну массива деленную на два и отнимаем один индекс
            var index2 = index + 1; // объявляем вторую переменную в которую присваиваем (=) первый средний индекс и добавляем к нему +1
            arr[index] = content;   // в массив с первым индексом присваиваем (=) второй параметр функции content
            arr[index2] = content;  // в массив со вторым индексом присваиваем (=) второй параметр функции content
        } else {    // если массив оказался нечетным, то выполняется тело {} в else 
            var index = arr.length - 1; // объявляем переменную index в которую присваиваем (=) длинну массива -1 и получаем индекс последнего элемента
            index = index / 2;  // в index присваиваем (=) длинну массива -1 делим на 2
            arr[index] = content;   // в массив с индексом присваиваем (=) второй параметр функции content
        }
        return arr; // возвращаем массив
    }



    
    var arr = [1, 2, 3, 4, 5, 6, 7, 8]

    var index = arr.length;
    index = index / 2;
    arr[index] = "число 4";
    var center2 = index + 1;
    arr[center2] = "число 5";

    
    //
    var arr = [];
    while (true) {
        var usename = prompt("Введите число")
        console.log(usename)
        if (usename == null) {
            break
        }
        else {
            arr.length 
        }

    }
    console.log(arr)


    // ОБЪЕКТЫ

var user = {    // объвляем объект с именем user
    name: "Vlad",   // пишем "название" и через : текст/свойство
    age: 22,    // название - age: и 22
    money: "100000$"
    }   // закрываем объект

    var key = prompt ("Что вы хотите узнать?", "name") // создаем переменную с промптом 
    // в него пишем текст и через запятую - текст внутри окна
     
    alert (user[key]);  // вызываем окно с выводом объекта и переменной key, чтобы получить данные из объекта



//   
var fruit = prompt ("Какой фрукт купить?")  // объявляем переменную с промптом 

var bag = { // объявляем объект 
[fruit]: 5, // используем квадратные скобки названия для создания вычисляемого свойства
}   // закрываем объект

alert (bag.apple)   //  


//
var user = { // объявляем объект
    name: "John",   // название name : свойство
    age: 22,
    isAdmin: true
}   // закрываем объект
for (var key in user) { // делаем цикл, в котором объявляем переменную key для user
    alert(key)  // выводим все имена объекта
    alert(user[key]) // выводим все свойства объекта
}



// клонирование объекта
var user = {
    name: "John",
    age: 30
  };
  var clone = {}; // новый пустой объект
  // скопируем все свойства user в него
  for (var key in user) {
    clone[key] = user[key];
  }
  // теперь в переменной clone находится абсолютно независимый клон объекта.
  clone.name = "Pete"; // изменим в нём данные
  
  alert( user.name ); // в оригинальном объекте значение свойства `name` осталось прежним – John.




// заточка пушки на +16 с шансом и сломом и инвентарём
var bag = { 
    "DB": {
        enchanted: 0,
        SA: "focus",
        LS: false,
        fullName: "Draconic Bow"
    },                                  // инвентарь с ДБ и Аркой на +4
    "AM": {
        enchanted: 4,
        SA: "acumen",
        LS: true,
        fullName: "Arcana Mace"
    }
}

enchantSession()    // вызов функции

function enchantSession() { // объявляем функцию

    var whatToEnchant = prompt("Что вы хотите заточить: DB или AM?")    // переменная с предметом
    var currentEntchantment     // переменная с текущей заточкой

    switch (whatToEnchant) {    // свич с проверкой на ввод "ДБ" и "АМ"
        case "DB":
            currentEntchantment = bag["DB"].enchanted
            break;  // выход из промпта

        case "AM":
            currentEntchantment = bag["AM"].enchanted
            break;

        default:    // если введено неверное значение
            alert("У вас нет такой пушки или нет такого названия")
            return  // выходим при неверном значении
    }

    for (var i = 0, agree; i < 15; i++) {   // создаем цикл для заточки (15 раз т.е. на 0 не точим)

        agree = confirm(`Вы уверены, что хотите точнуть ${whatToEnchant} +${currentEntchantment}?`)
        // записываем в переменную agree комфирм с пушкой для точки и его заточкой

        if (agree == true) {    // если заточено, то
            var result = enchant(currentEntchantment) // в переменную пишем функцию с параметром текущей заточки
            if (typeof result == "number") { // проверка типа на число
                alert("Заточка успешна")
                currentEntchantment++   // точим на +1
            } else {    
                if (typeof result == "string") {    // если вылезла строка, то
                    alert(`Неудачная заточка ${result}`)    // неудачная заточка и {получены кристаллы}
                    break   // выходим с концом
                } else {
                    alert("Произошла ошибка при заточке")   // вряд ли будет заюзаной
                }
            }
        } else { // если незаточено, выходим
            break
        }
    }
    bag[whatToEnchant].enchanted = currentEntchantment // пишем в заточку первоначального оружия текущий уровень заточки
} // закрываем функцию 

function enchant(current) { // объявляем функцию с параметром текущей заточки (0)
    if (current == 16) {    // если пушка+16 и хотим точнуть ещё, то будет ошибка
        return "Вы достигли лимита точки"
    }

    if (current < 3) { // если заточка пушки меньше чем 3 - точим на +1 (100% шанс)
        return current + 1
    }

    var result  // объявляем переменную в которой будут выпадать проценты
    var succesChance    // переменная для шанса заточки для каждого заточенного оружия

    succesChance = 70 - (2 * (current - 3))
    // если пушка +4, то нужно отнять на 2% шанс точки с каждой следующей точенной пушкой     
    // т.е.: пушка+8, то шанс -8% = 62%
    console.log(succesChance)
    result = Math.floor(Math.random() * 100)    // в переменную пишем выпадение от 0 до 100
    if (result <= succesChance) {   // если выпавшее значение меньше или равно 70, то...
        console.log("Заточено успешно")
    } else {    // если больше 70, то..
        result = Math.floor(Math.random() * (500 - 200) + 200)  // генерируем кол-во кристаллов от 200 до 500 штук
        result = `Фейл. Получено ${result} кристаллов`  // записываем в переменную кол-во кристаллов
    }
    console.log(result)
    return result;  // возвращаем конечный результат заточки
}


