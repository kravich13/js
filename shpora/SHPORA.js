// ===================================================================================== МОЯ ШПОРА ===============================================================================================





// =========================== РАБОТА С MATH.RANDOM ============================================

// Найдите квадратный корень из 379. Результат округлите до целых, до десятых, до сотых. 
var root = 379 // переменная с числом

root = Math.sqrt(root) // вычисление квадратного корня
root = root.toFixed(0) // округление до целого числа (19)
root = root.toFixed(1) // округление до десятых (19.4)
root = root.toFixed(2) // округление до сотых (19.45)
console.log(root)



// Найдите квадратный корень из 587. Округлите результат в большую и меньшую стороны, запишите результаты округления в объект с ключами 'floor' и 'ceil'. 

var root = 587 // переменная с числом
var rounding // переменная с хранением большего значения
var obj = {
    floor: 0, // меньше
    ceil: 0 // больше
}
root = Math.sqrt(root) // находим квадратный корень
rounding = root         // записываем в пустую переменную квадратный корень

root = Math.floor(root) // округляем начальную переменную в меньшую сторону
obj.floor = root        // присваиваем в свойство объекта floor значение 24 (меньшая сторона)
rounding = Math.ceil(rounding)  // клонированную переменную округляем в большую сторону
obj.ceil = rounding     // присваиваем в свойство объекта ceil значение 25 (большая сторона)
console.log(obj)

// Math.floor(переменная) - округление в меньшую сторону (9.5 = 9)
// Math.ceil(переменная) - округление в большую сторону (9.5 = 10)
// Math.random() * 10 - генерация числа от 0 до 10
// Math.random() * (100 - 1) + 1 = генерация числа от 1 до 100



// Вычисление максимального и минимального числа
var mass = [4, -2, 5, 19, -130, 0, 10] // массив с числами
console.log(Math.max(...mass)) // вывод максимального числа из массива (нужно писать ...числа/переменная)
console.log(Math.min(...mass)) // вывод минимального числа из массива



// 	Нахождение модуля разности (положительное число)
var a = -14 // переменная с -14
var b = 20 // переменная с 20
var c // пустая переменная для записи
c = Math.abs(a) // 
console.log(c)

// Math.abs делает из числа -14 число 14, при записи положительного числа - оно таким и останется







// =========================== РАБОТА СО SWITCH ============================================

var number = +prompt('Введите число между 0 и 3')   // объявляем промпт.
// +prompt означает, что это будет числовой промпт, а не строчный (преобразование к числу)

switch (number) {   // делаем проверку на введенную переменную в ()
    case 0: // кейс первый: если введено 0, то будет сообщение ниже и выход

    // Важно: switch делает проверку ТОЛЬКО на равенство. case 0 - это if (переменная == 0), другого не дано.
        alert("Вы ввели 0")
        break; // брейк обязателен иначе будет работать код сверху вниз до самого default!

    case 1:
        alert("Вы ввели 1")
        break;

    case 2:
    case 3:
        alert("Вы ввели 2 или 3")
        break;

    default:    // если были введены числа больше 3 - выведется default (как else)
        alert("Хрень")
}

// ВАЖНО: свитч делает проверку лишь на равенство
// break является обязательным после кода в проверке
// default заменяет else





// =========================== РАБОТА С IF ELSE ============================================

// в данном примере идут вложенные if. Они должны распологаться сугубо лесенкой!

if (browser == Edge) { // первая проверки, если нет, то else
    alert("Yove got the Edge!")
} else { 
    if (browser == Chrome || browser == Firefox || browser == Safari || browser == Opera) { // проверка в else, если нет, то послединй else
        // оператор || делает проверку на "ИЛИ", т.е. в данном примере или Хром, или ФФ и т.д.

        alert("Okay we support these browsers too")
    }
    else {
        alert("We hope that this page looks ok!")
    }
}

// тут всё просто, главное соблюдать if else лесенкой. Не выполнился if и впереди нужно сделать 10 проверок? Делай их в else
// проверка на null осуществляется оператором == 


// отличный пример с лесенкой 
var userName = prompt("Вы админ?", ""); // переменная со строковым промптом
if (userName == "Admin") { // если введено "Admin", выполнится код ниже
    var pass = prompt("А какой пароль?", "") // объявляем переменную с ещё одним промптом
    if (pass == "Giant") { // если введено "Giant", выполнится код ниже
        alert("Здравствуйте");
    } else { // если введено неверно, то
        if (pass == null) { // если пользователь нажал "отмена", то делается выход!
            alert("Отмэна")
        } else {    // если просто введено неверно, выполнится код с ошибкой
            alert("Неа");
        }
    }
} else { // если введено не "Admin", то 
    if (userName == null) { // если нажата отмена, то
        alert("Вы нажали отмэна"); // 
    } else { // если неверный логин, то 
        alert("я хз кто вы");
    }
}

// тут тоже всё просто, весь код идет лесенкой и понятно что за что отвечает
// придерживаясь такой структуры можно делать бесконечное количество проверок без ошибок





// =========================== РАБОТА С ЦИКЛАМИ ============================================

// ПРИМЕР РАБОТЫ С HTML, DOCUMENT.WRITE

// 1) ЧАСТЬ ПЕРВАЯ 
var table1 = "<table><tr>"; // добавляем переменную с первой частью 
var d = 0;  // объявляем числовую переменную (для кол-ва раз для вывода)
while (d < 10) {    // делаем условие в цикле while, которое будет циклить d пока d меньше 10
    d++;    // каждый цикл добавляет +1 и так пока d не станет больше 10
    table1 += ` <td> ${d} </td> `;  // к переменной table1 добавляем текст, внутри которого наша измененная переменная d
}
table1 += "</tr></table>";  // присваиваем конечный текст для переменной table в случае успешного цикла
document.write(table1);     // эта строчка делает пустую страницу с html кодом

// 2) ЧАСТЬ ВТОРАЯ
var table = "<table>"; // в переменную пишем начало HTML
var size = prompt (""); // затем делаем строчный промпт
console.log(typeof size);   // показывает тип переменной
for ( var i = 1; i < size; i++ ) { // делаем цикл от одного до введенного числом пользователя (size - промпт)
    table += " <tr> "; // прибавляем к строковой переменной открывающийся тег
    for ( var j = 1; j < size; j++ ) { // делаем вложенный цикл 
        table += `<td> ${ j * i } </td>`; // в переменную добавляем <тег `число` тег>  
    }
    table += "</tr>"; // закрываем тег после окончания внутреннего цикла 
}
table += "</table>"; // закрываем тег после окончания всех циклов
document.write(table); // делаем HTML документ






// =========================== РАБОТА С МАССИВАМИ ============================================

var numbers = [1, 20, 30, 4, 5, 6, 70, 80, 50, 10]  // объявляем массив

for (var i = 0; i < numbers.length; i++) {  // делаем цикл на длинну массива 
    var qq = numbers[i];    // в переменную присваиваем элемент массива [i] на каждом цикле
    if (numbers[i] % 2 == 0) {  // делаем проверку на остаток от деления, если равно 0, то 
        numbers[i] /= 2;    // делим чётные числа на два
    }
    else { 
          numbers[i] *= 2;  // если число нечетное - умножаем их на два
    }
    console.log(qq + " " + numbers[i]); // выводим в консоль переменную с массивом ДО изменений (qq), добавляем строку " пробел " и добавляем переменную с массивом ПОСЛЕ изменений
}



// Нахождение среднего арифметического числа 
// 1+2+3=6 / 3 = 3 - среднее число во всем массиве

var mass = [12, 15, 20, 25, 59, 79]
var summ = 0

for (var i = 0; i < mass.length; i++) {
    summ += mass[i] // 210 сумма чисел
}

summ /= mass.length // делим на сумму чисел (в данном моменте 6)
console.log(summ) // 35



// фирма имеет 5 магазинов. Информация о доходе каждого магазина за каждый месяц хранится в двух мерном массиве
var shop = [] // магазин
var sum = [] // сумма месяцев для каждого массива
var avg = [] // среднее число за месяц

for (var i = 0; i < 5; i++) {
    shop[i] = [] // создаем массив в двумерном массиве 5 раз 
    sum[i] = 0 // присваиваем 0 для избежания nall (ибо строчный массив будет)

    for (var j = 0; j < 12; j++) {
        // в элемент массива [0][0] генерируем число от 1 до 100 и округляем в меньшую сторону
        shop[i][j] = Math.floor(Math.random() * (100 - 1) + 1) 
        sum[i] += shop[i][j] // суммируем получившееся число к следующему
    }

    avg[i] = Math.round(sum[i] / 12) // присваиваем сумму пделенную на 12 в двумерном массиве
}
console.log(shop)
console.log(sum)
console.log(avg)

// дополнение: среднее за месяц по вертикали
var avgMunth = [] // среднее за месяц 

for (var i = 0; i < 12; i++) { // 12 потому что нужно записать 12 элементов в массив
avgMunth[i] = 0 // присваиваем 0 на каждый элемент

    for (var j = 0; j < 5; j++) { // 5 потому что складываем 5 массивов по вертикали ([0][0]+[1][0])
        avgMunth[i] += shop[j][i] 
    }
    // присваиваем на каждый месяц округленную сумму за месяц из 5 магазинов деленное на 5 (100/5=20 к примеру)
    avgMunth[i] = Math.round(avgMunth[i] / 5) 
}
console.log(avgMunth)






// =========================== РАБОТА С ОБЪЕКТАМИ ============================================

// объекты строятся лесенкой
// писать ключи объектов можно как в скобках < "" >, так и без них
// обращение к ключам делается либо через точку, либо через < [] >

var obj = { // создаем объект с именем obj
    Коля: '1000', // делаем три ключа с разными параметрами
    Вася: '500',
    Петя: '200'
}
console.log(obj.Коля + " " + obj.Петя) 
// делаем вывод свойств объектов через точку, в данном случае консоль покажет: 1000 + 200



// работа с промпт в объекте 
var user = {  
name: "Vlad",   // ключ со свойством "Vlad", 
age: 22,    // ключ со свойством 22,
money: "100000$" // ключ со свойством "100000$"
}   

var key = prompt ("Что вы хотите узнать?", "name") // создаем переменную с промптом 
alert (user[key]);  // этот метод даёт узнать, что за ключи находятся в объекте user
// т.е., если ввести в промпт ключ name, то покажет в алерте "Vlad"


// клонирование объекта
var user = {
    name: "John",
    age: 30
  }

  var clone = {}; // новый пустой объект

  for (var key in user) { // делаем цикл с ключем объекта и его именем (user)
    clone[key] = user[key]; // в новый, пустой объект присваиваем старый объект в цикле 
  }  // теперь в переменной clone находится абсолютно независимый клон объекта.

  clone.name = "Pete"; // изменим в нём данные
  
  alert( user.name ); // в оригинальном объекте значение свойства `name` осталось прежним – John.





// =========================== РАБОТА С ФУНКЦИЯМИ ============================================

// любая функция делает две вещи: принимает входные параметры (какие угодно) и возвращает результат (return)
// Infinity и -Infinity - это бесконечность. Infinity с минусом - это числа меньше нуля.
// return в функции нужен для того, чтобы получить результат 

// вычисление самого большого числа из массива
var numbers = [25, 37, 45, 1, 39, 81, 31, 50];  // объявляем массив
function maxNumb(max) {     // объявляем функцию с именем "maxNumb" и свойством (max)
    var newMax = -Infinity;  // создали новую переменную, у которой значение минус бесконечность (число)

    for (i = 0; i < numbers.length; i++) {  // делаем цикл массива "numbers"
        if (numbers[i] > newMax) {  // If с проверкой больше ли число, чем -инфинити
            newMax = numbers[i];    // присваиваем большее число в переменную newMax
        }
    }
    return newMax;  // возвращаем новую переменную
}
console.log(maxNumb(numbers)); // вызываем функцию с параметром numbers (массив с числами)




// ВЫВОДИТ СРЕДНИЙ ЭЛЕМЕНТ НЕЧЕТНОГО МАССИВА И ИЗМЕНЯЕТ ЕГО В ФУНКЦИИ 
var arr = ["a", "b", "какая-то хрень", "c", "d"]    // массив с 5-ю элементами

function changeMiddle(arr, content) {   // объявляем функцию с именем changeMiddle с объявленными из вне переменными (arr и content)
    var index = arr.length - 1; // присваиваем индекс последнего элемента -1 (индекс 4)
    index = index / 2;  // делим число 4 на 2 и получаем, это и есть центр (под 2-м индексом "какая-то хрень")
    arr[index] = content;   // присваем в средний элемент массива то, что было введено при вызове функции (30)
    return arr[index];   // возвращаем массив со средним измененным элементом (arr[30])
}

console.log(changeMiddle(arr, 30))  // выводим в консоль массив с заданным параметром (середина массива) 30
console.log(arr)    // выводим в консоль измененный массив




